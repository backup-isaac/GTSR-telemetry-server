{"version":3,"sources":["App.js","index.js"],"names":["App","useState","timezoneOffset","setTimezoneOffset","startTime","setStartTime","endTime","setEndTime","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","console","log","catch","err","error","htmlFor","name","value","onChange","target","type","step","ReactDOM","render","document","getElementById"],"mappings":"gNAuGeA,MArGf,WAEE,IAFa,EAI+BC,mBAAS,UAJxC,mBAINC,EAJM,KAIUC,EAJV,OAKqBF,mBAAS,IAL9B,mBAKNG,EALM,KAKKC,EALL,OAMiBJ,mBAAS,IAN1B,mBAMNK,EANM,KAMGC,EANH,KA0Bb,OACE,gCACE,0BAAMC,SApBW,SAACC,GACpBA,EAAEC,iBAEFC,MAToB,8BASC,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBd,eAAgBA,EAChBE,UAAWA,EACXE,QAASA,MAGVW,MAAK,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC1BG,OAAM,SAACC,GAAD,OAASH,QAAQI,MAAMD,QAM5B,2BAAOE,QAAQ,mBAAf,YACA,4BACEC,KAAK,kBACLC,MAAQxB,EACRyB,SAAW,SAAAlB,GAAC,OAAIN,EAAkBM,EAAEmB,OAAOF,SAE3C,4BAAQA,MAAM,UAAd,oCACA,4BAAQA,MAAM,UAAd,qCACA,4BAAQA,MAAM,UAAd,uBACA,4BAAQA,MAAM,UAAd,uBACA,4BAAQA,MAAM,UAAd,sBACA,4BAAQA,MAAM,UAAd,0CACA,4BAAQA,MAAM,UAAd,2CACA,4BAAQA,MAAM,UAAd,uDACA,4BAAQA,MAAM,UAAd,wDACA,4BAAQA,MAAM,UAAd,uBACA,4BAAQA,MAAM,UAAd,uDACA,4BAAQA,MAAM,UAAd,4BACA,4BAAQA,MAAM,UAAd,gDACA,4BAAQA,MAAM,UAAd,4BACA,4BAAQA,MAAM,UAAd,0CACA,4BAAQA,MAAM,UAAd,yDACA,4BAAQA,MAAM,UAAd,mDACA,4BAAQA,MAAM,UAAd,yCACA,4BAAQA,MAAM,UAAd,uDACA,4BAAQA,MAAM,UAAd,sBACA,4BAAQA,MAAM,UAAd,gDACA,4BAAQA,MAAM,UAAd,qBACA,4BAAQA,MAAM,UAAd,0DACA,4BAAQA,MAAM,UAAd,mDACA,4BAAQA,MAAM,UAAd,kCACA,4BAAQA,MAAM,UAAd,sCACA,4BAAQA,MAAM,UAAd,gCACA,4BAAQA,MAAM,UAAd,uCACA,4BAAQA,MAAM,UAAd,oDACA,4BAAQA,MAAM,UAAd,qBACA,4BAAQA,MAAM,UAAd,qDACA,4BAAQA,MAAM,UAAd,gCACA,4BAAQA,MAAM,UAAd,qDACA,4BAAQA,MAAM,UAAd,iCACA,4BAAQA,MAAM,UAAd,wDACA,4BAAQA,MAAM,UAAd,+BACA,4BAAQA,MAAM,UAAd,sDACA,4BAAQA,MAAM,UAAd,gCACA,4BAAQA,MAAM,UAAd,gCACA,4BAAQA,MAAM,UAAd,uCAGF,2BAAOF,QAAQ,cAAf,cACA,2BACEK,KAAK,iBACLJ,KAAK,aACLK,KAAK,IACLJ,MAAQtB,EACRuB,SAAW,SAAAlB,GAAC,OAAIJ,EAAaI,EAAEmB,OAAOF,UAGxC,2BAAOF,QAAQ,YAAf,YACA,2BACEK,KAAK,iBACLJ,KAAK,WACLK,KAAK,IACLJ,MAAQpB,EACRqB,SAAW,SAAAlB,GAAC,OAAIF,EAAWE,EAAEmB,OAAOF,UAGtC,4BAAQG,KAAK,UAAb,YC5FRE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.936b1548.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n  // const localMergeURL = 'https://solarracing.me/merge';\n  const localMergeURL = 'http://localhost:8888/merge';\n\n  const [timezoneOffset, setTimezoneOffset] = useState('-05:00');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(localMergeURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        timezoneOffset: timezoneOffset,\n        startTime: startTime,\n        endTime: endTime,\n      }),\n    })\n      .then((res) => console.log(res))\n      .catch((err) => console.error(err));\n  };\n\n  return (\n    <center>\n      <form onSubmit={ handleSubmit }>\n        <label htmlFor='timezone-offset'>Timezone</label>\n        <select\n          name='timezone-offset'\n          value={ timezoneOffset }\n          onChange={ e => setTimezoneOffset(e.target.value) }\n        >\n          <option value='-12:00'>(GMT -12:00) Eniwetok, Kwajalein</option>\n          <option value='-11:00'>(GMT -11:00) Midway Island, Samoa</option>\n          <option value='-10:00'>(GMT -10:00) Hawaii</option>\n          <option value='-09:50'>(GMT -9:30) Taiohae</option>\n          <option value='-09:00'>(GMT -9:00) Alaska</option>\n          <option value='-08:00'>(GMT -8:00) Pacific Time (US &amp; Canada)</option>\n          <option value='-07:00'>(GMT -7:00) Mountain Time (US &amp; Canada)</option>\n          <option value='-06:00'>(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>\n          <option value='-05:00'>(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>\n          <option value='-04:50'>(GMT -4:30) Caracas</option>\n          <option value='-04:00'>(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz</option>\n          <option value='-03:50'>(GMT -3:30) Newfoundland</option>\n          <option value='-03:00'>(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>\n          <option value='-02:00'>(GMT -2:00) Mid-Atlantic</option>\n          <option value='-01:00'>(GMT -1:00) Azores, Cape Verde Islands</option>\n          <option value='+00:00'>(GMT) Western Europe Time, London, Lisbon, Casablanca</option>\n          <option value='+01:00'>(GMT +1:00) Brussels, Copenhagen, Madrid, Paris</option>\n          <option value='+02:00'>(GMT +2:00) Kaliningrad, South Africa</option>\n          <option value='+03:00'>(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>\n          <option value='+03:50'>(GMT +3:30) Tehran</option>\n          <option value='+04:00'>(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi</option>\n          <option value='+04:50'>(GMT +4:30) Kabul</option>\n          <option value='+05:00'>(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>\n          <option value='+05:50'>(GMT +5:30) Bombay, Calcutta, Madras, New Delhi</option>\n          <option value='+05:75'>(GMT +5:45) Kathmandu, Pokhara</option>\n          <option value='+06:00'>(GMT +6:00) Almaty, Dhaka, Colombo</option>\n          <option value='+06:50'>(GMT +6:30) Yangon, Mandalay</option>\n          <option value='+07:00'>(GMT +7:00) Bangkok, Hanoi, Jakarta</option>\n          <option value='+08:00'>(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>\n          <option value='+08:75'>(GMT +8:45) Eucla</option>\n          <option value='+09:00'>(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>\n          <option value='+09:50'>(GMT +9:30) Adelaide, Darwin</option>\n          <option value='+10:00'>(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>\n          <option value='+10:50'>(GMT +10:30) Lord Howe Island</option>\n          <option value='+11:00'>(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>\n          <option value='+11:50'>(GMT +11:30) Norfolk Island</option>\n          <option value='+12:00'>(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>\n          <option value='+12:75'>(GMT +12:45) Chatham Islands</option>\n          <option value='+13:00'>(GMT +13:00) Apia, Nukualofa</option>\n          <option value='+14:00'>(GMT +14:00) Line Islands, Tokelau</option>\n        </select>\n\n        <label htmlFor='start-time'>Start time</label>\n        <input\n          type='datetime-local'\n          name='start-time'\n          step='1'\n          value={ startTime }\n          onChange={ e => setStartTime(e.target.value) }\n        />\n\n        <label htmlFor='end-time'>End time</label>\n        <input\n          type='datetime-local'\n          name='end-time'\n          step='1'\n          value={ endTime }\n          onChange={ e => setEndTime(e.target.value) }\n        />\n\n        <button type='submit'>Merge</button>\n      </form>\n    </center>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}